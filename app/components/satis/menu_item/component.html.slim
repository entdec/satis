li.rounded-sm.px-3.py-1.hover:bg-gray-100.flex.items-center.dark:bg-gray-900.dark:border-gray-700.dark:hover:bg-gray-700 data-controller="satis-menu" data-action="mouseover->satis-menu#show mouseleave->satis-menu#hide"
  a.cursor-pointer.py-1.w-full.text-left.flex.items-center.outline-none.focus:outline-none href=item.link *item.link_attributes
    - if item.type == :custom
      = render(partial: item.link_attributes[:data][:path], locals: item.link_attributes[:data][:parameters])
    span.pr-1.flex-shrink-0.w-6.text-gray-500.dark:text-gray-300
      - if item.icon.present?
        - if item.icon.respond_to?(:keys)
          span class=item.icon.keys.first
            - item.icon[item.icon.keys.first].each do |si|
              i class=si
        - else
          i class=item.icon
    span.pr-1.flex-1.text-gray-500.dark:text-gray-300
      - unless item.type == :custom
        = item.label
    span.pr-1.flex-shrink-0.w-6
      - if item.type == :toggle
        i.fal.fa-check.hidden data-satis-menu-target="toggle" id="#{item.id}"
  - if item.type == :group
    a.clear-icon.cursor-pointer.text-gray-400.hidden data-satis-menu-target="clear" data-clear="true" id="#{item.type}_#{item.link_attributes[:data][:view_id]}_#{item.link_attributes[:data][:column]}" data=item.link_attributes[:data]
      i.fas.fa-xmark

  - if item.menu
    ul.hidden.bg-white.border.rounded-md.shadow-lg data-satis-menu-target="submenu" data-satis-menu-submenu-placement="left"
      = render(Satis::MenuItem::Component.with_collection(item.menu.items))
